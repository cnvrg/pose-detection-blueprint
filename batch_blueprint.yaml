# Copyright (c) 2022 Intel Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

title: Pose Detection Batch
version: 1.0.0
description: "Detect humans and classify their poses in a batch of images and videos"
long_description: "Detect humans and classify their poses in a batch of images and videos sing YOLOv5 for human detection and a custom-trained Keras model for pose classification."
author: "cnvrg"
author_email: "info@cnvrg.io"

tags:
  - training
tasks:
  - title: S3 Connector
    top: 300
    left: 0

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: s3-connector
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python s3-connector.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: endpoint
        type: 'categorical'
        values:
          - 'http://s3.amazonaws.com download'
      - key: bucketname
        type: 'categorical'
        values:
          - 'libhub-readme'
      - key: localdir
        type: 'categorical'
        values:
          - '/cnvrg'
      - key: prefix
        type: 'categorical'
        values:
          - 'model_files/pose_detection/'
  - title: Batch
    top: 400
    left: 100

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: pose-detection-batch
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python3 batch.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: test_dir_img
        type: 'categorical'
        values:
          - '/input/s3_connector/model_files/pose_detection/test_images/'
      - key: model_weights
        type: 'categorical'
        values:
          - '/input/s3_connector/model_files/pose_detection/generic/weights.best.hdf5'
      - key: class_names
        type: 'categorical'
        values:
          - '/input/s3_connector/model_files/pose_detection/generic/class_names.csv'
      - key: optimizer
        type: 'categorical'
        value:
          - 'adam'
      - key: loss
        type: 'categorical'
        values:
          - 'categorical_crossentropy'
      - key: metrics
        type: 'discrete'
        values:
          - 'accuracy'
      
relations:
  - from: S3 Connector
    to: Batch
